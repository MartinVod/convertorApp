{"version":3,"sources":["components/Main.jsx","components/Header.jsx","components/Nav.jsx","components/Update.jsx","components/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["Main","props","useState","to","setTo","from","setFrom","amount","setAmount","flagButton","setFlagButton","showRates","cur","name","getValueByName","i","curency","length","valu","className","id","style","width","onChange","e","target","value","val","document","getElementById","disabled","selected","map","classname","type","placeholder","onClick","alert","doExchange","Header","Nav","href","showHistory","setShowHistory","onlod","afterUpdate","Update","curName","setCurName","curValu","setCurvalu","class","scope","addCur","History","exHistory","history","ind","desc","result","deleteHis","App","setCurency","setExHistory","rate","line1","line2","toString","newHistory","newCur","newCurArr","updated","splice","push","exact","path","component","index","newHis","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cedf2b71.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function Main(props) {\r\n\r\n    const [to, setTo] = useState({});\r\n    const [from,setFrom] = useState({});\r\n    const [amount, setAmount] = useState(0);\r\n    const [flagButton, setFlagButton] = useState(false);\r\n\r\n    const showRates = (cur) =>{\r\n        return(\r\n          <option>{cur.name}</option>\r\n        )\r\n    }\r\n\r\n    const getValueByName = (name) =>{\r\n        for(let i=0; i<props.curency.length; i++){\r\n            if(props.curency[i].name === name){\r\n                return (props.curency[i].valu);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const changeTo = (e) =>{\r\n        setTo({name: e.target.value, val: getValueByName(e.target.value)});\r\n        document.getElementById('toSelect').className='form-control is-valid';\r\n    }\r\n\r\n    const changeFrom = (e) =>{\r\n        setFrom({name: e.target.value, val: getValueByName(e.target.value)});\r\n        document.getElementById('fromSelect').className='form-control is-valid';\r\n    }\r\n\r\n    const changeAmount = (e) =>{\r\n        if(e.target.value.length >0){\r\n            setFlagButton(true);\r\n        }else{\r\n            setFlagButton(false);\r\n        } \r\n        setAmount(e.target.value);\r\n    }\r\n\r\n    const checkInputs = ()=>{\r\n        if(to.value === 'type'){\r\n            alert('Please select type');\r\n            document.getElementById('toSelect').className='form-control is-invalid';\r\n        }else if(from.value === 'type'){\r\n            alert('Please select type');\r\n            document.getElementById('fromSelect').className='form-control is-invalid';\r\n        }else{\r\n            props.doExchange(from,to,amount);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className='row form-inline'>\r\n            <div className='col-md-6 '>\r\n                <div className='row'>\r\n                    <div className='col-md-4'>\r\n                        <span className='form-text'>From: </span>\r\n                        <span>To: </span>\r\n                    </div>\r\n                    <div className='col-md-8'>\r\n                        <select id=\"fromSelect\" className=\"form-control\" style={{width: '60%'}} onChange={changeFrom}>\r\n                            <option  disabled selected>type</option>\r\n                            {props.curency.map(showRates)} \r\n                        </select>\r\n                        <select id=\"toSelect\" className=\"form-control\"  style={{width: '60%'}} onChange={changeTo}>\r\n                            <option  disabled selected>type</option>\r\n                            {props.curency.map(showRates)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div classname=\"form-group col-md-6\">\r\n                <input type='number' id='sumToEx' className='form-control' placeholder='Please enter number to exchange' onChange={changeAmount}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\" >\r\n        \r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <button className={flagButton ? \"btn btn-primary\" : \"btn btn-primary disabled\"} onClick={checkInputs}>Start</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <h1>Exchange</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './Nav.css'\r\n\r\nexport default function Nav(props) {\r\n    return (\r\n        <div>\r\n            <Link to='/update'><button className='btn btn-primary btn-lg'>Update</button></Link>\r\n            <a href='http://facebook.com' target='blank'><button className='btn btn-primary btn-lg'>share on facebook</button></a>\r\n            <button className='btn btn-primary btn-lg' onClick={()=>{props.showHistory ? props.setShowHistory({onlod: true, afterUpdate: false}) : props.setShowHistory({onlod: false, afterUpdate: false})}}>Toggle your exchange list</button>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Update(props) {\r\n\r\n    const [curName, setCurName] = useState();\r\n    const [curValu, setCurvalu] = useState();\r\n\r\n    const updateCurName = (e) =>{\r\n        setCurName(e.target.value);\r\n    }\r\n\r\n    const updateCurValu = (e)=>{\r\n        setCurvalu(e.target.value);\r\n    }\r\n\r\n    const showCur = (cur) =>{\r\n        return (\r\n            <tr>\r\n                <td>{cur.name}</td>\r\n                <td>{cur.valu}</td>\r\n            </tr>\r\n        )\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <table class=\"table table-sm table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Type</th>\r\n                            <th scope=\"col\">Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.curency.map(showCur)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"row form-inline\">\r\n                <span>Type: </span><input type=\"text\" className=\"form-control\" onChange={updateCurName}/>\r\n                <br />\r\n                <span>New Value: </span><input type=\"text\" className=\"form-control\" onChange={updateCurValu}/>\r\n                <br />\r\n                \r\n            </div>\r\n            <Link to='/'><button className=\"btn btn-primary\">Back</button></Link>\r\n            <Link to='/update'><button className=\"btn btn-primary\" onClick={()=>{props.addCur(curName,curValu)}}>Submit</button></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './History.css'\r\nexport default function History(props) {\r\n\r\n\r\n\r\nconst showHis = (history,ind) =>{\r\n    return(\r\n        <div className='container hisCon'>\r\n            <div className='row'>\r\n                <div className='col-md 8'>\r\n                    <p>#{history.id}</p>\r\n                    <hr />\r\n                    <p>{history.desc}</p>\r\n                    <hr />\r\n                    <p>{history.result}</p>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                   <button className=\"btn btn-danger\" onClick={(e)=>{props.deleteHis(e,ind)}}>X</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.exHistory.map(showHis)}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\nimport {HashRouter as Router,Switch , Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Main from './components/Main'\nimport Header from './components/Header'\nimport Nav from './components/Nav'\nimport Update from './components/Update'\nimport History from './components/History'\n\n\nimport './App.css';\n\nfunction App() {\n\n  const [curency, setCurency] = useState([{name: 'dollar',valu: 4},{name: 'euro',valu: 5},{name: 'shekel',valu: 1}]);\n  const [exHistory, setExHistory] = useState([{id: 1,desc:'from dollar to shekel',result: '1=4'}]);\n  const [showHistory, setShowHistory] = useState({onlod: false, afterUpdate: false});\n\n  const deleteHis = (e,index)=>{\n    let newHis = exHistory;\n    newHis.splice(index,1);\n    setExHistory(newHis);\n    alert('delete completed succesfuly');\n    setShowHistory({onlod: false, afterUpdate: true,});\n}\n\nconst doExchange = (from,to,amount) =>{\n  let rate = from.val/to.val;\n  rate = rate*amount;\n  let line1='from '+from.name+' to '+to.name+'.';\n  let line2=(from.val).toString()+'='+(to.val).toString();\n  let newHistory = {id: exHistory.length+1, desc: line1, result: line2};\n  setExHistory([...exHistory,newHistory]);\n  alert('the exchange rate is: '+rate);\n}\n\nconst addCur = (name,val) =>{\n  let newCur = {name: name, valu: val}\n  let newCurArr = curency;\n  let updated = false;\n  for(let i=0;i<curency.length;i++){\n    if(newCur.name === curency[i].name){\n      newCurArr.splice(i,1,newCur);\n      setCurency(newCurArr);\n      updated = true;\n      alert(\"currency updated\")\n      break;\n    }\n  }\n  if(!updated){\n    newCurArr.push(newCur);\n    setCurency(newCurArr);\n    alert('currency added');\n  }\n}\n\n\n\n\n  return (\n    <div className=\"App container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={()=><Main curency={curency} exHistory={exHistory} doExchange={doExchange} />} />\n          <Route exact path='/update' component={()=><Update  curency={curency} addCur={addCur} />} />\n        </Switch>\n        <Nav setShowHistory={setShowHistory} showHistory={showHistory}/>\n        {showHistory.afterUpdate && setShowHistory({onlod: true, afterUpdate: false})}\n        {showHistory.onlod ? <History exHistory={exHistory} deleteHis={deleteHis}/> : null}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}